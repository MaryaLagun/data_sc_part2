D:\data_science_24_part2\data_science_part2\lab1\lab1\.venv\Scripts\python.exe D:\data_science_24_part2\data_science_part2\lab1\lab1\reg_electr.py 
D:\data_science_24_part2\data_science_part2\lab1\lab1\reg_electr.py:10: SyntaxWarning: invalid escape sequence '\d'
  df=pd.read_csv("d:\\data_science_24_part2\data_science_part2\lab1\household_power_consumption.csv", sep=';')
D:\data_science_24_part2\data_science_part2\lab1\lab1\reg_electr.py:10: DtypeWarning: Columns (2,3,4,5,6,7) have mixed types. Specify dtype option on import or set low_memory=False.
  df=pd.read_csv("d:\\data_science_24_part2\data_science_part2\lab1\household_power_consumption.csv", sep=';')
         Date      Time  ... Sub_metering_2 Sub_metering_3
0  16/12/2006  17:24:00  ...          1.000           17.0
1  16/12/2006  17:25:00  ...          1.000           16.0
2  16/12/2006  17:26:00  ...          2.000           17.0
3  16/12/2006  17:27:00  ...          1.000           17.0
4  16/12/2006  17:28:00  ...          1.000           17.0

[5 rows x 9 columns]
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 2075259 entries, 0 to 2075258
Data columns (total 9 columns):
 #   Column                 Dtype  
---  ------                 -----  
 0   Date                   object 
 1   Time                   object 
 2   Global_active_power    object 
 3   Global_reactive_power  object 
 4   Voltage                object 
 5   Global_intensity       object 
 6   Sub_metering_1         object 
 7   Sub_metering_2         object 
 8   Sub_metering_3         float64
dtypes: float64(1), object(8)
memory usage: 142.5+ MB
None
Date                         0
Time                         0
Global_active_power          0
Global_reactive_power        0
Voltage                      0
Global_intensity             0
Sub_metering_1               0
Sub_metering_2               0
Sub_metering_3           25979
dtype: int64
       Sub_metering_3
count    2.049280e+06
mean     6.458447e+00
std      8.437154e+00
min      0.000000e+00
25%      0.000000e+00
50%      1.000000e+00
75%      1.700000e+01
max      3.100000e+01
D:\data_science_24_part2\data_science_part2\lab1\lab1\reg_electr.py:26: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_loc['ID'] = df_loc.index + 1
           Date      Time  ... Sub_metering_3   ID
396  17/12/2006  00:00:00  ...            0.0  397
397  17/12/2006  00:01:00  ...            0.0  398
398  17/12/2006  00:02:00  ...            0.0  399
399  17/12/2006  00:03:00  ...            0.0  400
400  17/12/2006  00:04:00  ...            0.0  401

[5 rows x 10 columns]
*****************
Метрики качества:
*****************
MAE: 0.03281071087734397
MSE: 0.002049100825760913
R²: 0.9987154855018333

Process finished with exit code 0
